{
    "cord_uid": "s1gwh4qg",
    "source_x": "PMC",
    "pmcid": "PMC2739203",
    "divid": "11",
    "text": "There are two ways of defining format of the UID conversion: using either precompiled or user-defined name templates. The user is currently provided with several precompiled templates for name generation, which can be used \"as is\" or after refinement (see below). Each template is accompanied with examples of input to illustrate its usage. \"Entry name\" template can be useful for identifying misspelled identifiers, as well as for comparative inspection of basic information about the entries in UniProt. Two other templates (\"Gene\" and \"Species\") can be used for converting UIDs into gene and species names, respectively, as they are specified in GenBank. The \"Complex species name\" template combines full species name with primary ID (gi) that are neatly separated. The \"Complex protein name\" includes primary ID, condensed species name, protein description and CDS, and locus tag, in a size restricted manner to facilitate reading a complex name structure. These templates are suited for producing names of sequences originated from a wide range of organisms. \"Acronym\" template converts GenBank organism name annotation into acronym. Three templates were designed specifically for viruses to address specifics of this group for which the naming remains a matter of debate [15, 17] . For several medically important viruses with large sampling from the natural diversity, e.g. influenza and noroviruses [18, 22] , names conventions were accepted by the field to include reference to serotype, host species, country of isolation, strain or isolate name, collection date and, for influenza viruses, subtype. These names are part of the GenBank entries where from they can be readily extracted. To demonstrate that similar names can be also generated on-the-fly from two components, using the isolate/strain and serotype fields in respective entries, a separate \"Influenza virus name\" template is provided. We extended this approach by designing two other virus templates, \"Complex virus name I\" and \"Complex virus name II\", that could generate names with complex structure for majority of other viruses for which no consensus on the naming has been reached. These templates combine information from up to six separate entry fields, each keeping an elementary record e.g. about date or place of virus isolation. \"Complex virus name II\" additionally includes reference to protein function. These templates could help researchers studying many viruses, e.g. coronaviruses and picornaviruses [15] communicate their sequence-based data in a name format similar to that accepted for influenza virus. SNAD-mediated solution to the generation of complex virus names reinforces the role of diverse fields in sequence entries as the primary source of information. If these fields are completed with records as expected, virus names can be readily generated under different and evolving conventions. Thus, SNAD provides a tool for explora-SNAD dataflow Figure 1 SNAD dataflow. User submits sequence UIDs and defines a format of conversion by choosing a template. SNAD analyzes the input, extracts UIDs from it and queries a user-defined database to locate cognate entries. The next step is extracting annotation from the entries and parsing the user-selected template to generate separate parts. They are mapped onto annotation to produce name parts, which are combined into names according to the template. Finally, SNAD substitutes the submitted UIDs in list, alignment, or tree with the designed names and returns results to the user. Unique IDs conversion with SNAD. Nine IDs from GenBank (section \"Before UID conversion\") are converted using a pre-compiled four-characteristic template \"Complex protein name\" that includes the following GenBank characteristics: \"Primary ID\" (gi number); organism name formatted as \"G [enus].species\"; protein product and gene locus tag. Three delimiters are used: space, \" [\" and \"]\", and none of characteristics is abbreviated. First three characteristics have their size limited to: 9, 6, and 17 symbols, respectively. Results of the conversion are shown in \"After UID conversion\" section. Each arrow links a delimiter to a part of converted names. {...} indicates that more than one organism name characteristic is found for a submitted ID (see [GenBank/Protein: 126224], features source/organism). SNAD users can initiate refining of any of the provided templates (by using \"Refine name template\" option) or generate de novo templates by choosing \"User defined\" template that automatically activates the refining mode. In both instances, the advanced template-building facility becomes available for the user. It empowers the user with fine control over the output name format, including the number of independently designed parts of the name, characteristic of each part, parts order, size of each part, and type of delimiter preceding each part ( Figure 2 ). Design of each part in the name is controlled by a separate row. The name parts -from left to right -are defined by respective rows in the template-building facility from top to bottom. Rows can be moved up and down or deleted and inserted with a respective effect on the name structure and content. For retrieving sequence characteristics from database entries SNAD uses BioPerl scheme with internally controlled vocabulary of annotation [26] . Information from two or more annotation fields can also be combined in a single characteristic in a template. For instance, for virus name templates, a combination \"strain OR isolate\" may be used to form a characteristic. For name designing, the user can choose from a dropdown menu of sequence characteristics and features that were derived from available databases. These characteristics can be used separately or in combination to design a name format that can combine, for instance, unique reference to the original database with a concise biological description of the entry (see Figure 2 for an example). For characteristics which values are described with several words, first letters of these words can be combined using characteristic's \"abbreviate\" option to produce acronyms. If a selected characteristic is not available in annotation for a sequence, it is replaced in the sequence name with a symbol that the user selected from a separate drop-down menu. Due to gaps in annotation, names designed with the templates may not be complete for every entry.",
    "project": "cdlai_CORD-19",
    "denotations": []
}